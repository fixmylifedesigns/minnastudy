This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-02-14T14:32:21.642Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.gitignore
eslint.config.mjs
jsconfig.json
next-sitemap.config.js
next.config.mjs
package.json
postcss.config.mjs
public/file.svg
public/globe.svg
public/next.svg
public/robots.txt
public/sitemap.xml
public/vercel.svg
public/window.svg
README.md
src/app/api/contact/route.js
src/app/contact/page.js
src/app/creatorgrant/apply/page.js
src/app/creatorgrant/page.js
src/app/creatorgrant/submissions/page.js
src/app/globals.css
src/app/layout.js
src/app/page.js
src/app/sample/advanced/page.js
src/app/sample/beginner/page.js
src/app/sample/contact/page.js
src/app/sample/intermediate/page.js
src/app/sample/page.js
src/app/services/page.js
src/components/ui/nav.js
tailwind.config.mjs

================================================================
Repository Files
================================================================

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: eslint.config.mjs
================
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [...compat.extends("next/core-web-vitals")];

export default eslintConfig;

================
File: jsconfig.json
================
{
  "compilerOptions": {
    "paths": {
      "@/*": ["./src/*"]
    }
  }
}

================
File: next-sitemap.config.js
================
/** @type {import('next-sitemap').IConfig} */
module.exports = {
    siteUrl: process.env.SITE_URL || 'https://minnastudy.com',
    generateRobotsTxt: true,
    generateIndexSitemap: false,
    exclude: ['/api/*'],
    robotsTxtOptions: {
      policies: [
        {
          userAgent: '*',
          allow: '/',
        },
      ],
    },
  }

================
File: next.config.mjs
================
/** @type {import('next').NextConfig} */
const nextConfig = {};

export default nextConfig;

================
File: package.json
================
{
  "name": "minnastudy",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "postbuild": "next-sitemap"
  },
  "dependencies": {
    "@stripe/stripe-js": "^5.6.0",
    "lucide-react": "^0.475.0",
    "next": "15.1.7",
    "next-sitemap": "^4.2.3",
    "nodemailer": "^6.10.0",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "stripe": "^17.6.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "eslint": "^9",
    "eslint-config-next": "15.1.7",
    "postcss": "^8",
    "tailwindcss": "^3.4.1"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: public/file.svg
================
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>

================
File: public/globe.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>

================
File: public/next.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>

================
File: public/robots.txt
================
# *
User-agent: *
Allow: /

# Host
Host: https://minnastudy.com

# Sitemaps
Sitemap: https://minnastudy.com/sitemap.xml

================
File: public/sitemap.xml
================
<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:news="http://www.google.com/schemas/sitemap-news/0.9" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:mobile="http://www.google.com/schemas/sitemap-mobile/1.0" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1" xmlns:video="http://www.google.com/schemas/sitemap-video/1.1">
<url><loc>https://minnastudy.com/sample/beginner</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
<url><loc>https://minnastudy.com/sample/intermediate</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
<url><loc>https://minnastudy.com/services</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
<url><loc>https://minnastudy.com/sample/contact</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
<url><loc>https://minnastudy.com/contact</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
<url><loc>https://minnastudy.com</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
<url><loc>https://minnastudy.com/sample/advanced</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
<url><loc>https://minnastudy.com/sample</loc><lastmod>2025-02-13T17:21:41.477Z</lastmod><changefreq>daily</changefreq><priority>0.7</priority></url>
</urlset>

================
File: public/vercel.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>

================
File: public/window.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>

================
File: README.md
================
This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

## Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
# or
bun dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.js`. The page auto-updates as you edit the file.

This project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.

## Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!

## Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.

================
File: src/app/api/contact/route.js
================
// app/api/contact/route.js
import { NextResponse } from "next/server";
import nodemailer from "nodemailer";

export async function POST(request) {
  try {
    const body = await request.json();
    const { name, email, languages, domain, features, additionalInfo } = body;

    const transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_APP_PASSWORD,
      },
    });

    const htmlContent = `
      <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
        <h2 style="color: #6B46C1; text-align: center; padding: 20px;">New Website Inquiry From Minnastudy.com</h2>
        
        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
          <h3 style="color: #4A5568; margin-bottom: 15px;">Teacher Information</h3>
          <p><strong>Name:</strong> ${name}</p>
          <p><strong>Email:</strong> ${email}</p>
          <p><strong>Teaching Languages:</strong> ${languages}</p>
        </div>

        <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 20px;">
          <h3 style="color: #4A5568; margin-bottom: 15px;">Website Preferences</h3>
          <p><strong>Domain Preference:</strong> ${domain}</p>
          <p><strong>Requested Features:</strong></p>
          <ul style="margin: 0; padding-left: 20px;">
            ${features.map((feature) => `<li>${feature}</li>`).join("")}
          </ul>
        </div>

        ${
          additionalInfo
            ? `
          <div style="background-color: #f8f9fa; padding: 20px; border-radius: 8px;">
            <h3 style="color: #4A5568; margin-bottom: 15px;">Additional Information</h3>
            <p>${additionalInfo}</p>
          </div>
        `
            : ""
        }
      </div>
    `;

    await transporter.sendMail({
      from: process.env.GMAIL_USER,
      to: process.env.GMAIL_USER,
      subject: `New Website Inquiry from ${name}`,
      html: htmlContent,
    });

    return NextResponse.json(
      { message: "Email sent successfully" },
      { status: 200 }
    );
  } catch (error) {
    console.error("Error sending email:", error);
    return NextResponse.json({ error: "Error sending email" }, { status: 500 });
  }
}

================
File: src/app/contact/page.js
================
'use client'
// pages/contact.js
import { useState } from 'react';

export default function ContactForm() {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    languages: '',
    domain: '',
    features: [],
    additionalInfo: ''
  });
  const [status, setStatus] = useState({ type: '', message: '' });
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleCheckboxChange = (e) => {
    const { value, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      features: checked 
        ? [...prev.features, value]
        : prev.features.filter(feature => feature !== value)
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);
    setStatus({ type: '', message: '' });

    try {
      const res = await fetch('/api/contact', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });

      const data = await res.json();

      if (!res.ok) throw new Error(data.error || 'Error sending message');

      setStatus({
        type: 'success',
        message: 'Thank you! We will get back to you soon.'
      });
      setFormData({
        name: '',
        email: '',
        languages: '',
        domain: '',
        features: [],
        additionalInfo: ''
      });
    } catch (error) {
      setStatus({
        type: 'error',
        message: 'There was an error sending your message. Please try again.'
      });
    } finally {
      setIsSubmitting(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 text-black">
      <main className="pt-24 pb-20">
        <div className="container mx-auto px-4">
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              Get Your Professional Teaching Website
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Let&apos;s create your online presence. Simple, professional, and effective.
            </p>
          </div>

          <div className="max-w-2xl mx-auto">
            <div className="bg-white rounded-lg shadow-md p-8">
              <form onSubmit={handleSubmit} className="space-y-6">
                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Name *
                    </label>
                    <input
                      type="text"
                      name="name"
                      required
                      value={formData.name}
                      onChange={handleInputChange}
                      className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Email *
                    </label>
                    <input
                      type="email"
                      name="email"
                      required
                      value={formData.email}
                      onChange={handleInputChange}
                      className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Teaching Language(s) *
                  </label>
                  <input
                    type="text"
                    name="languages"
                    required
                    value={formData.languages}
                    onChange={handleInputChange}
                    placeholder="e.g., Japanese, English"
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Preferred Domain Option *
                  </label>
                  <select
                    name="domain"
                    required
                    value={formData.domain}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="">Select domain preference</option>
                    <option value="subdomain">Free yourname.minnastudy.com subdomain</option>
                    <option value="custom">I want my own .com domain (additional cost)</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Would you like to include: (optional)
                  </label>
                  <div className="space-y-2">
                    <label className="flex items-center">
                      <input
                        type="checkbox"
                        value="Contact form"
                        checked={formData.features.includes('Contact form')}
                        onChange={handleCheckboxChange}
                        className="rounded text-blue-600 focus:ring-blue-500 mr-2"
                      />
                      <span>Contact form</span>
                    </label>
                    <label className="flex items-center">
                      <input
                        type="checkbox"
                        value="Calendly integration"
                        checked={formData.features.includes('Calendly integration')}
                        onChange={handleCheckboxChange}
                        className="rounded text-blue-600 focus:ring-blue-500 mr-2"
                      />
                      <span>Calendly integration</span>
                    </label>
                    <label className="flex items-center">
                      <input
                        type="checkbox"
                        value="Social media links"
                        checked={formData.features.includes('Social media links')}
                        onChange={handleCheckboxChange}
                        className="rounded text-blue-600 focus:ring-blue-500 mr-2"
                      />
                      <span>Social media links</span>
                    </label>
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Additional Information
                  </label>
                  <textarea
                    name="additionalInfo"
                    rows="4"
                    value={formData.additionalInfo}
                    onChange={handleInputChange}
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-blue-500 focus:border-blue-500"
                    placeholder="Tell us about your teaching style and what you'd like to highlight on your website..."
                  ></textarea>
                </div>

                {status.message && (
                  <div className={`p-4 rounded-md ${
                    status.type === 'success' 
                      ? 'bg-green-50 text-green-800' 
                      : 'bg-red-50 text-red-800'
                  }`}>
                    {status.message}
                  </div>
                )}

                <div>
                  <button
                    type="submit"
                    disabled={isSubmitting}
                    className={`w-full bg-blue-600 text-white px-6 py-3 rounded-md transition-colors font-medium
                      ${isSubmitting ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-700'}`}
                  >
                    {isSubmitting ? 'Sending...' : 'Get Started'}
                  </button>
                </div>

                <p className="text-sm text-gray-500 text-center">
                  Fields marked with * are required
                </p>
              </form>
            </div>

            <div className="mt-12 grid md:grid-cols-2 gap-8">
              <div className="text-center">
                <h3 className="text-lg font-bold text-gray-900 mb-2">Email</h3>
                <p className="text-gray-600">contact@stealthwork.app</p>
              </div>
              <div className="text-center">
                <h3 className="text-lg font-bold text-gray-900 mb-2">Response Time</h3>
                <p className="text-gray-600">Within 24 hours</p>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

================
File: src/app/creatorgrant/apply/page.js
================
"use client";
import React, { useState } from "react";

export default function TeacherApplication() {
  const [formData, setFormData] = useState({
    // Contact Info
    name: "",
    email: "",
    phone: "",
    location: "",
    // Social Media
    currentWebsite: "",
    instagram: "",
    tiktok: "",
    youtube: "",
    twitch: "",
    // Teaching Profile
    teachingSubject: "",
    teachingExperience: "",
    teachingFormat: "",
    studentAgeGroups: [],
    studentsPerMonth: "",
    // Website Goals
    websiteGoals: "",
    websiteUse: "",
    specificFeatures: "",
  });

  const [status, setStatus] = useState({
    submitting: false,
    submitted: false,
    error: null,
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleAgeGroupChange = (e) => {
    const { value, checked } = e.target;
    setFormData((prev) => ({
      ...prev,
      studentAgeGroups: checked
        ? [...prev.studentAgeGroups, value]
        : prev.studentAgeGroups.filter((group) => group !== value),
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setStatus({ ...status, submitting: true });

    try {
      const formBody = new URLSearchParams();
      Object.keys(formData).forEach((key) => {
        formBody.append(
          key,
          Array.isArray(formData[key])
            ? formData[key].join(", ")
            : formData[key]
        );
      });

      const response = await fetch(
        "https://script.google.com/macros/s/AKfycbwSoD6lWAwuFTX7ko3zKDJ_eah_vYDJZF4nasJOigXvE-QFucP8O1vdNhRIVRrza__igA/exec",
        {
          method: "POST",
          mode: "no-cors",
          headers: {
            "Content-Type": "application/x-www-form-urlencoded",
          },
          body: formBody.toString(),
        }
      );

      setStatus({
        submitting: false,
        submitted: true,
        error: null,
      });

      setFormData({
        name: "",
        email: "",
        phone: "",
        location: "",
        currentWebsite: "",
        instagram: "",
        tiktok: "",
        youtube: "",
        twitch: "",
        teachingSubject: "",
        teachingExperience: "",
        teachingFormat: "",
        studentAgeGroups: [],
        studentsPerMonth: "",
        websiteGoals: "",
        websiteUse: "",
        specificFeatures: "",
      });
    } catch (error) {
      setStatus({
        submitting: false,
        submitted: false,
        error: "Failed to submit form. Please try again.",
      });
    }
  };

  return (
    <div className="min-h-screen">
      {/* Banner Section */}
      <header className="w-full py-16 bg-gradient-to-r from-indigo-500 to-blue-600">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center text-white">
          <h1 className="text-4xl sm:text-5xl font-bold mb-6">
            MinnaStudy Creator Grant: Free Website Program for Teachers
          </h1>
          <p className="text-xl sm:text-2xl">
            We’re selecting a few teachers to receive a professional website—for
            free!
          </p>
          <p className="text-xl sm:text-2xl">
            Fill out the form below to apply
          </p>
        </div>
      </header>

      {/* Form Section */}
      <main className="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {status.submitted ? (
          <div className="bg-green-50 border border-green-200 rounded-lg p-6 text-center">
            <h2 className="text-2xl font-bold text-green-800 mb-4">
              Application Submitted!
            </h2>
            <p className="text-green-700">
              Thank you for your application. We&apos;ll review it and get back
              to you soon.
            </p>
          </div>
        ) : (
          <div className="bg-white shadow-lg rounded-lg p-6">
            {status.error && (
              <div className="mb-6 bg-red-50 border border-red-200 rounded-lg p-4">
                <p className="text-red-800">{status.error}</p>
              </div>
            )}

            <form onSubmit={handleSubmit} className="space-y-8">
              {/* Contact Information */}
              <section>
                <h2 className="text-xl font-semibold text-gray-900 mb-4">
                  Contact Information
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label
                      htmlFor="name"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Full Name *
                    </label>
                    <input
                      type="text"
                      id="name"
                      name="name"
                      required
                      value={formData.name}
                      onChange={handleChange}
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                  </div>
                  <div>
                    <label
                      htmlFor="email"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Email Address *
                    </label>
                    <input
                      type="email"
                      id="email"
                      name="email"
                      required
                      value={formData.email}
                      onChange={handleChange}
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                  </div>
                  <div>
                    <label
                      htmlFor="phone"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Phone Number
                    </label>
                    <input
                      type="tel"
                      id="phone"
                      name="phone"
                      value={formData.phone}
                      onChange={handleChange}
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                  </div>
                  <div>
                    <label
                      htmlFor="location"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Location
                    </label>
                    <input
                      type="text"
                      id="location"
                      name="location"
                      value={formData.location}
                      onChange={handleChange}
                      placeholder="City, Country"
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                  </div>
                </div>
              </section>

              {/* Social Media */}
              <section>
                <h2 className="text-xl font-semibold text-gray-900 mb-4">
                  Social Media & Online Presence
                </h2>
                <div className="space-y-4">
                  <div>
                    <label
                      htmlFor="currentWebsite"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Current Website
                    </label>
                    <input
                      type="url"
                      id="currentWebsite"
                      name="currentWebsite"
                      value={formData.currentWebsite}
                      onChange={handleChange}
                      placeholder="https://..."
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                  </div>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label
                        htmlFor="instagram"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Instagram
                      </label>
                      <input
                        type="text"
                        id="instagram"
                        name="instagram"
                        value={formData.instagram}
                        onChange={handleChange}
                        placeholder="@username"
                        className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      />
                    </div>
                    <div>
                      <label
                        htmlFor="tiktok"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        TikTok
                      </label>
                      <input
                        type="text"
                        id="tiktok"
                        name="tiktok"
                        value={formData.tiktok}
                        onChange={handleChange}
                        placeholder="@username"
                        className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      />
                    </div>
                    <div>
                      <label
                        htmlFor="youtube"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        YouTube
                      </label>
                      <input
                        type="text"
                        id="youtube"
                        name="youtube"
                        value={formData.youtube}
                        onChange={handleChange}
                        placeholder="Channel URL or @handle"
                        className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      />
                    </div>
                    <div>
                      <label
                        htmlFor="twitch"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Twitch
                      </label>
                      <input
                        type="text"
                        id="twitch"
                        name="twitch"
                        value={formData.twitch}
                        onChange={handleChange}
                        placeholder="username"
                        className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      />
                    </div>
                  </div>
                </div>
              </section>

              {/* Teaching Profile */}
              <section>
                <h2 className="text-xl font-semibold text-gray-900 mb-4">
                  Teaching Profile
                </h2>
                <div className="space-y-4">
                  <div>
                    <label
                      htmlFor="teachingSubject"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      What do you teach? *
                    </label>
                    <input
                      type="text"
                      id="teachingSubject"
                      name="teachingSubject"
                      required
                      value={formData.teachingSubject}
                      onChange={handleChange}
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <label
                        htmlFor="teachingExperience"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Teaching Experience *
                      </label>
                      <select
                        id="teachingExperience"
                        name="teachingExperience"
                        required
                        value={formData.teachingExperience}
                        onChange={handleChange}
                        className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      >
                        <option value="">Select years of experience</option>
                        <option value="0-1">Less than 1 year</option>
                        <option value="1-3">1-3 years</option>
                        <option value="3-5">3-5 years</option>
                        <option value="5-10">5-10 years</option>
                        <option value="10+">More than 10 years</option>
                      </select>
                    </div>

                    <div>
                      <label
                        htmlFor="teachingFormat"
                        className="block text-sm font-medium text-gray-700 mb-1"
                      >
                        Teaching Format *
                      </label>
                      <select
                        id="teachingFormat"
                        name="teachingFormat"
                        required
                        value={formData.teachingFormat}
                        onChange={handleChange}
                        className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      >
                        <option value="">Select teaching format</option>
                        <option value="online">Online Only</option>
                        <option value="in-person">In-person Only</option>
                        <option value="hybrid">
                          Both Online and In-person
                        </option>
                      </select>
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-2">
                      Student Age Groups *
                    </label>
                    <div className="grid grid-cols-2 gap-2">
                      {[
                        "Kids (under 12)",
                        "Teens (13-17)",
                        "Adults (18+)",
                        "Business Professionals",
                      ].map((group) => (
                        <label key={group} className="flex items-center">
                          <input
                            type="checkbox"
                            name="studentAgeGroups"
                            value={group}
                            checked={formData.studentAgeGroups.includes(group)}
                            onChange={handleAgeGroupChange}
                            className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                          />
                          <span className="ml-2 text-gray-700">{group}</span>
                        </label>
                      ))}
                    </div>
                  </div>

                  <div>
                    <label
                      htmlFor="studentsPerMonth"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Average Number of Students per Month
                    </label>
                    <input
                      type="number"
                      id="studentsPerMonth"
                      name="studentsPerMonth"
                      value={formData.studentsPerMonth}
                      onChange={handleChange}
                      min="0"
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                  </div>
                </div>
              </section>

              {/* Website Goals */}
              <section>
                <h2 className="text-xl font-semibold text-gray-900 mb-4">
                  Website Goals
                </h2>
                <div className="space-y-4">
                  <div>
                    <label
                      htmlFor="websiteGoals"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Why are you interested in getting a website? *
                    </label>
                    <textarea
                      id="websiteGoals"
                      name="websiteGoals"
                      required
                      value={formData.websiteGoals}
                      onChange={handleChange}
                      rows={4}
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      placeholder="Describe your main reasons for wanting a website..."
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="websiteUse"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      How would a website benefit your teaching? *
                    </label>
                    <textarea
                      id="websiteUse"
                      name="websiteUse"
                      required
                      value={formData.websiteUse}
                      onChange={handleChange}
                      rows={4}
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      placeholder="Explain how you plan to use the website..."
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="specificFeatures"
                      className="block text-sm font-medium text-gray-700 mb-1"
                    >
                      Are there any specific features you&apos;re interested in?
                    </label>
                    <textarea
                      id="specificFeatures"
                      name="specificFeatures"
                      value={formData.specificFeatures}
                      onChange={handleChange}
                      rows={4}
                      className="w-full px-4 py-2 border rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                      placeholder="List any specific features or functionality you'd like (e.g., booking system, blog, course platform)..."
                    />
                  </div>
                </div>
              </section>

              <div className="pt-6">
                <button
                  type="submit"
                  disabled={status.submitting}
                  className="w-full bg-blue-600 text-white px-6 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  {status.submitting ? "Submitting..." : "Submit Application"}
                </button>
              </div>
            </form>
          </div>
        )}
      </main>
    </div>
  );
}

================
File: src/app/creatorgrant/page.js
================
'use client'
import React from "react";
import Link from "next/link";

export default function TeacherApplication() {
  return (
    <div className="grid grid-rows-[auto_1fr_auto] min-h-screen">
      {/* Hero Section */}
      <header className="w-full py-16 bg-gradient-to-r from-indigo-500 to-blue-600">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center text-white">
          <h1 className="text-4xl sm:text-5xl font-bold mb-6">
            MinnaStudy Creator Grant: Free Website Program for Teachers
          </h1>
          <p className="text-xl sm:text-2xl mb-8">
            We’re selecting a few teachers to receive a professional website—for
            free!
          </p>
          <Link
            href="/creatorgrant/apply"
            className="bg-white text-blue-600 px-8 py-3 rounded-full font-semibold hover:bg-gray-100 transition-colors"
          >
            Apply for MinnaStudy Creator Grant
          </Link>
        </div>
      </header>

      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        {/* Program Details Section */}
        <section className="mb-20">
          <h2 className="text-3xl font-bold mb-8 text-center text-black">
            What’s Included
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <div className="p-6 rounded-lg bg-white shadow-lg">
              <h3 className="text-xl font-semibold mb-4 text-black">
                Full Website Setup & Publishing
              </h3>
              <p className="text-gray-600">
                Normally ¥20,000 ($130), yours free!
              </p>
            </div>
            <div className="p-6 rounded-lg bg-white shadow-lg">
              <h3 className="text-xl font-semibold mb-4 text-black">
                6 Months Free Hosting
              </h3>
              <p className="text-gray-600">
                Enjoy 6 months of free hosting (normally ¥3,000 or $20 per
                month).
              </p>
            </div>
            <div className="p-6 rounded-lg bg-white shadow-lg">
              <h3 className="text-xl font-semibold mb-4 text-black">
                A Professional Website Template
              </h3>
              <p className="text-gray-600">
                Designed specifically for educators.
              </p>
            </div>
          </div>
        </section>

        {/* Additional Features Section */}
        <section className="mb-20">
          <h2 className="text-3xl font-bold mb-8 text-center text-black">
            Domain & Upgrade Options
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div className="flex items-start gap-4">
              <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                <span className="text-blue-600">✓</span>
              </div>
              <div>
                <h3 className="font-semibold mb-2 text-black">
                  Free Subdomain
                </h3>
                <p className="text-gray-600">
                  Get your free yourname.minnastudy.com domain.
                </p>
              </div>
            </div>
            <div className="flex items-start gap-4">
              <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                <span className="text-blue-600">✓</span>
              </div>
              <div>
                <h3 className="font-semibold mb-2 text-black">
                  Bring Your Own Domain
                </h3>
                <p className="text-gray-600">
                  Already have a domain? We’ll integrate it at no extra cost.
                </p>
              </div>
            </div>
            <div className="flex items-start gap-4">
              <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                <span className="text-blue-600">✓</span>
              </div>
              <div>
                <h3 className="font-semibold mb-2 text-black">
                  Upgrade Anytime
                </h3>
                <p className="text-gray-600">
                  Upgrade to a unique domain for ¥4,500 ($30) per month.
                </p>
              </div>
            </div>
            <div className="flex items-start gap-4">
              <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                <span className="text-blue-600">✓</span>
              </div>
              <div>
                <h3 className="font-semibold mb-2 text-black">
                  Don&apos;t have a domain?
                </h3>
                <p className="text-gray-600">
                  You can buy a unique domain with us and we will handle the rest
                </p>
              </div>
            </div>
          </div>
        </section>

        {/* Important Information Section */}
        <section className="mb-20">
          <div className="max-w-2xl mx-auto p-8 rounded-lg bg-white shadow-lg">
            <h3 className="text-xl font-semibold mb-4 text-black">
              Important Information
            </h3>
            <ul className="space-y-4 text-gray-600">
              <li>
                Upgrading to a unique domain within 6 months ends the free
                hosting period, and billing at ¥4,500 ($30) per month begins
                immediately.
              </li>
              <li>
                We also offer custom web designs and Stripe integration at an
                additional cost. Contact us for more details.
              </li>
              <li>
                This opportunity is limited to selected applicants and is not
                guaranteed for all submissions.
              </li>
            </ul>
          </div>
        </section>

        {/* Application CTA */}
        <section className="text-center bg-gray-50 rounded-xl p-8">
          <h2 className="text-3xl font-bold mb-4 text-black">Apply Now</h2>
          <p className="text-gray-600 mb-6">
            Submit your application to be considered for our free website
            program.
          </p>
          <Link
            href="/creatorgrant/apply"
            className="bg-blue-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors inline-block"
          >
            Apply for MinnaStudy Creator Grant
          </Link>
        </section>
      </main>
    </div>
  );
}

================
File: src/app/creatorgrant/submissions/page.js
================
"use client";
import React, { useState, useEffect } from "react";
import {
  ChevronDown,
  ChevronUp,
  Instagram,
  Youtube,
  Globe,
  Twitch,
} from "lucide-react";

const TikTokIcon = ({ size, className }) => (
  <svg
    xmlns="http://www.w3.org/2000/svg"
    width={size}
    height={size}
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    strokeWidth="2"
    strokeLinecap="round"
    strokeLinejoin="round"
    className={className}
  >
    <path d="M9 12a4 4 0 1 0 4 4V4a5 5 0 0 0 5 5" />
  </svg>
);

export default function Submissions() {
  const [submissions, setSubmissions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [expandedRow, setExpandedRow] = useState(null);
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 10;

  useEffect(() => {
    fetchSubmissions();
  }, []);

  const fetchSubmissions = async () => {
    try {
      setLoading(true);
      const response = await fetch(
        "https://script.google.com/macros/s/AKfycbyg3fDK1uot0DmxTyI6xAQrBGSVx7gu1LNF8CRLYvjjN75pzjq61Z_KFgQbAKgYkaxMxg/exec"
      );
      const data = await response.json();
      // Remove header row and reverse to show newest first
      const submissionsData = data.slice(1).reverse();
      setSubmissions(submissionsData);

      setLoading(false);
    } catch (err) {
      console.error("Fetch error:", err);
      setError("Failed to load submissions");
      setLoading(false);
    }
  };

  const formatSocialMediaUrl = (type, username) => {
    if (!username) return null;
    username = username.trim().replace("@", "");

    switch (type) {
      case "instagram":
        return `https://instagram.com/${username}`;
      case "youtube":
        return username.includes("http")
          ? username
          : `https://youtube.com/@${username}`;
      case "twitch":
        return `https://twitch.tv/${username}`;
      case "tiktok":
        return `https://tiktok.com/@${username}`;
      default:
        return username;
    }
  };

  const SocialMediaLink = ({ type, username }) => {
    if (!username) return null;
    const url = formatSocialMediaUrl(type, username);
    if (!url) return null;

    const iconProps = {
      size: 20,
      className: "text-gray-600 hover:text-blue-600",
    };

    const icons = {
      instagram: <Instagram {...iconProps} />,
      youtube: <Youtube {...iconProps} />,
      website: <Globe {...iconProps} />,
      twitch: <Twitch {...iconProps} />,
      tiktok: <TikTokIcon {...iconProps} />,
    };

    return (
      <a
        href={url}
        target="_blank"
        rel="noopener noreferrer"
        className="inline-block mx-1"
      >
        {icons[type]}
      </a>
    );
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 p-8">
        <div className="max-w-6xl mx-auto">
          <div className="animate-pulse space-y-4">
            <div className="h-8 bg-gray-200 rounded w-1/4"></div>
            <div className="h-64 bg-gray-200 rounded"></div>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 p-8">
        <div className="max-w-6xl mx-auto">
          <div className="bg-red-50 border border-red-200 rounded-lg p-4">
            <p className="text-red-800">{error}</p>
            <button
              onClick={fetchSubmissions}
              className="mt-4 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700"
            >
              Try Again
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-6xl mx-auto">
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold text-gray-900">
            Website Applications
          </h1>
          <button
            onClick={fetchSubmissions}
            className="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700"
          >
            Refresh
          </button>
        </div>

        <div className="bg-white shadow-lg rounded-lg overflow-hidden">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Expand
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Date
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Name
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Teaching Subject
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Links
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Status
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {submissions
                .slice(
                  (currentPage - 1) * itemsPerPage,
                  currentPage * itemsPerPage
                )
                .map((row, index) => (
                  <React.Fragment key={index}>
                    <tr className="hover:bg-gray-50">
                      <td className="px-6 py-4 whitespace-nowrap">
                        <button
                          onClick={() =>
                            setExpandedRow(expandedRow === index ? null : index)
                          }
                          className="text-gray-500 hover:text-blue-600"
                        >
                          {expandedRow === index ? (
                            <ChevronUp size={20} />
                          ) : (
                            <ChevronDown size={20} />
                          )}
                        </button>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {new Date(row[0]).toLocaleDateString()}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <div className="text-sm font-medium text-gray-900">
                          {row[1]}
                        </div>
                        <div className="text-sm text-gray-500">{row[2]}</div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        {row[10]}
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <div className="flex items-center space-x-2">
                          {row[5] && (
                            <SocialMediaLink type="website" username={row[5]} />
                          )}
                          {row[6] && (
                            <SocialMediaLink
                              type="instagram"
                              username={row[6]}
                            />
                          )}
                          {row[7] && (
                            <SocialMediaLink type="tiktok" username={row[7]} />
                          )}
                          {row[8] && (
                            <SocialMediaLink type="youtube" username={row[8]} />
                          )}
                          {row[9] && (
                            <SocialMediaLink type="twitch" username={row[9]} />
                          )}
                        </div>
                      </td>
                      <td className="px-6 py-4 whitespace-nowrap">
                        <select
                          value={row[18] || "New"}
                          onChange={(e) => {
                            // Update status logic here
                            console.log("Status updated:", e.target.value);
                          }}
                          className="text-sm rounded-full px-3 py-1 border"
                        >
                          <option value="New">New</option>
                          <option value="Reviewed">Reviewed</option>
                        </select>
                      </td>
                    </tr>
                    {expandedRow === index && (
                      <tr>
                        <td colSpan="6" className="px-6 py-4 bg-gray-50">
                          <div className="grid grid-cols-2 gap-4">
                            <div>
                              <h3 className="font-semibold mb-2">
                                Contact Information
                              </h3>
                              <p>
                                <span className="text-gray-600">Phone:</span>{" "}
                                {row[3]}
                              </p>
                              <p>
                                <span className="text-gray-600">Location:</span>{" "}
                                {row[4]}
                              </p>
                            </div>
                            <div>
                              <h3 className="font-semibold mb-2">
                                Teaching Profile
                              </h3>
                              <p>
                                <span className="text-gray-600">
                                  Experience:
                                </span>{" "}
                                {row[11]}
                              </p>
                              <p>
                                <span className="text-gray-600">Format:</span>{" "}
                                {row[12]}
                              </p>
                              <p>
                                <span className="text-gray-600">
                                  Age Groups:
                                </span>{" "}
                                {row[13]}
                              </p>
                              <p>
                                <span className="text-gray-600">
                                  Students/Month:
                                </span>{" "}
                                {row[14]}
                              </p>
                            </div>
                            <div className="col-span-2">
                              <h3 className="font-semibold mb-2">
                                Website Goals
                              </h3>
                              <p className="mb-2">
                                <span className="text-gray-600">Goals:</span>{" "}
                                {row[15]}
                              </p>
                              <p className="mb-2">
                                <span className="text-gray-600">
                                  Planned Use:
                                </span>{" "}
                                {row[16]}
                              </p>
                              <p>
                                <span className="text-gray-600">
                                  Desired Features:
                                </span>{" "}
                                {row[17]}
                              </p>
                            </div>
                          </div>
                        </td>
                      </tr>
                    )}
                  </React.Fragment>
                ))}
            </tbody>
          </table>
          <div className="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
            <div className="flex items-center justify-between w-full">
              <button
                onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}
                disabled={currentPage === 1}
                className="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50"
              >
                Previous
              </button>

              <div>
                <p className="text-sm text-gray-700">
                  Showing{" "}
                  <span className="font-medium">
                    {(currentPage - 1) * itemsPerPage + 1}
                  </span>{" "}
                  to{" "}
                  <span className="font-medium">
                    {Math.min(currentPage * itemsPerPage, submissions.length)}
                  </span>{" "}
                  of <span className="font-medium">{submissions.length}</span>{" "}
                  results
                </p>
              </div>

              <button
                onClick={() =>
                  setCurrentPage((prev) =>
                    Math.min(
                      prev + 1,
                      Math.ceil(submissions.length / itemsPerPage)
                    )
                  )
                }
                disabled={
                  currentPage === Math.ceil(submissions.length / itemsPerPage)
                }
                className="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 disabled:opacity-50"
              >
                Next
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  /* --foreground: #171717; */
}

@media (prefers-color-scheme: dark) {
  :root {
    /* --background: #0a0a0a; */
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

================
File: src/app/layout.js
================
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Navigation from "@/components/ui/nav";

const geistSans = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});

const geistMono = Geist_Mono({
  subsets: ["latin"],
  variable: "--font-geist-mono",
});

export const metadata = {
  metadataBase: new URL("https://minnastudy.com"),
  title: {
    default: "MinnaStudy - Japanese Learning Tools, Games & Language Resources",
    template: "%s | MinnaStudy",
  },
  description:
    "MinnaStudy offers interactive Japanese learning tools, language games, and educational resources. Perfect for students, teachers, and language enthusiasts.",
  keywords: [
    "Japanese learning",
    "language games",
    "Japanese study tools",
    "learning Japanese",
    "Japanese language resources",
    "Japanese education",
    "language learning platform",
    "Japanese teaching tools",
    "Minna Study",
    "Minna No Nihongo",
    "MinnaStudy",
    "creator grant",
  ],
  authors: [{ name: "MinnaStudy" }],
  openGraph: {
    type: "website",
    locale: "en_US",
    url: "https://minnastudy.com",
    siteName: "MinnaStudy",
    title: "MinnaStudy - Japanese Learning Tools & Resources",
    description:
      "Interactive Japanese learning tools, games, and resources for students and teachers.",
    images: [
      {
        url: "/og-image.png",
        width: 1200,
        height: 630,
        alt: "MinnaStudy - Japanese Learning Platform",
      },
    ],
  },
  twitter: {
    card: "summary_large_image",
    title: "MinnaStudy - Japanese Learning Tools & Resources",
    description:
      "Interactive Japanese learning tools, games, and resources for students and teachers.",
    images: ["/og-image.png"],
  },
  robots: {
    index: true,
    follow: true,
    googleBot: {
      index: true,
      follow: true,
      "max-video-preview": -1,
      "max-image-preview": "large",
      "max-snippet": -1,
    },
  },
  verification: {
    google: "your-google-verification-code",
    yandex: "your-yandex-verification-code",
  },
  alternates: {
    canonical: "https://minnastudy.com",
    languages: {
      "en-US": "https://minnastudy.com/en-US",
      "ja-JP": "https://minnastudy.com/ja-JP",
    },
  },
};

export default function RootLayout({ children }) {
  return (
    <html lang="en" className={`${geistSans.variable} ${geistMono.variable}`}>
      <head>
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
        <link rel="manifest" href="/manifest.json" />
      </head>
      <body
        className="min-h-screen flex flex-col text-black"
        suppressHydrationWarning
      >
        <Navigation />
        <main className="flex-grow">{children}</main>
        {/* Footer */}
        <footer className="bg-gray-50 py-8">
          <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="mt-8 pt-8 border-t border-gray-200 text-center text-gray-600">
              <p>&copy; 2025 MinnaStudy. All rights reserved.</p>
            </div>
          </div>
        </footer>
      </body>
    </html>
  );
}

================
File: src/app/page.js
================
import Link from "next/link";

export default function Home() {
  return (
    <div className="grid grid-rows-[auto_1fr_auto] min-h-screen">
      {/* Hero Section */}
      <div className="w-full bg-yellow-400 text-black text-center py-2 font-semibold">
        🎉 Apply for our Creator Grant for a chance to get a free professional
        website!{" "}
        <Link href="/creatorgrant" className="underline">
          Learn more
        </Link>
      </div>

      <header className="w-full py-16 bg-gradient-to-r from-indigo-500 to-blue-600">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center text-white">
          <h1 className="text-4xl sm:text-5xl font-bold mb-6">
            Your Professional Website, Built for You
          </h1>
          <p className="text-xl sm:text-2xl mb-8">
            Showcase your pricing, plans, and experience with a custom website.
            Get a personalized .com or a subdomain like yourname.minnastudy.com
          </p>
          <div className="flex gap-4 justify-center">
            <Link
              href="/contact"
              className="bg-white text-blue-600 px-6 py-2 rounded-full font-semibold hover:bg-gray-100 transition-colors"
            >
              Get Started Today
            </Link>
            <Link
              href="/sample"
              className="border-2 border-white text-white px-6 py-2 rounded-full font-semibold hover:bg-white/10 transition-colors"
            >
              See a template
            </Link>
          </div>
        </div>
      </header>

      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        {/* Services Section */}
        <section className="mb-20 text-black">
          <h2 className="text-3xl font-bold mb-8 text-center">
            Everything You Need for a Professional Online Presence
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            <div className="p-6 rounded-lg bg-white shadow-lg">
              <h3 className="text-xl font-semibold mb-4">Custom Website</h3>
              <p className="text-gray-600">
                Fully designed website tailored to your brand and teaching style
              </p>
            </div>
            <div className="p-6 rounded-lg bg-white shadow-lg">
              <h3 className="text-xl font-semibold mb-4">Your Domain</h3>
              <p className="text-gray-600">
                Choose your own .com or use our free yourname.minnastudy.com
                domain
              </p>
            </div>
            <div className="p-6 rounded-lg bg-white shadow-lg">
              <h3 className="text-xl font-semibold mb-4">SEO Optimized</h3>
              <p className="text-gray-600">
                Help potential students find you easily through search engines
              </p>
            </div>
          </div>
        </section>

        {/* Features Section */}
        <section className="mb-20">
          <h2 className="text-3xl font-bold mb-8 text-center text-black">
            Why Language Teachers Trust Minna Study
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div className="flex flex-col gap-4">
              <div className="flex items-start gap-4">
                <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                  <span className="text-blue-600">✓</span>
                </div>
                <div>
                  <h3 className="font-semibold mb-2 text-black">
                    Teacher-Focused Design
                  </h3>
                  <p className="text-gray-600">
                    We understand what teachers need – focused on showcasing
                    your services effectively
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-4 text-black">
                <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                  <span className="text-blue-600">✓</span>
                </div>
                <div>
                  <h3 className="font-semibold mb-2">
                    No Technical Skills Needed
                  </h3>
                  <p className="text-gray-600">
                    We handle everything for you - just share your content
                  </p>
                </div>
              </div>
            </div>
            <div className="flex flex-col gap-4">
              <div className="flex items-start gap-4">
                <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                  <span className="text-blue-600">✓</span>
                </div>
                <div>
                  <h3 className="font-semibold mb-2 text-black">
                    Easy Contact Integration
                  </h3>
                  <p className="text-gray-600 text-black">
                    Connect with LINE, Instagram, Email, and more
                  </p>
                </div>
              </div>
              <div className="flex items-start gap-4">
                <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                  <span className="text-blue-600">✓</span>
                </div>
                <div>
                  <h3 className="font-semibold mb-2 text-black">
                    Booking Integration
                  </h3>
                  <p className="text-gray-600">
                    Optional scheduling with Google Calendar, Calendly, or LINE
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Contact Section */}
        <section className="mb-20 ">
          <h2 className="text-3xl font-bold mb-8 text-center text-black">
            Get Your Custom Website
          </h2>
          <div className="max-w-2xl mx-auto p-8 rounded-lg bg-white shadow-lg text-black">
            <p className="text-lg text-center mb-6">
              We create custom websites tailored to your teaching needs and
              budget. Contact us to discuss your requirements and get a
              personalized quote.
            </p>
            <div className="flex flex-col items-center gap-6">
              <div className="text-center">
                <h3 className="font-semibold mb-2">
                  Available Options Include:
                </h3>
                <ul className="space-y-2">
                  <li className="flex items-center justify-center gap-2">
                    <span className="text-blue-600">✓</span>
                    <span>Custom domain or free minnastudy.com subdomain</span>
                  </li>
                  <li className="flex items-center justify-center gap-2">
                    <span className="text-blue-600">✓</span>
                    <span>Personalized pages for your services</span>
                  </li>
                  <li className="flex items-center justify-center gap-2">
                    <span className="text-blue-600">✓</span>
                    <span>Booking system integration</span>
                  </li>
                </ul>
              </div>
              <Link
                href="/contact"
                className="bg-blue-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors"
              >
                Contact Us for Details
              </Link>
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="text-center bg-gray-50 rounded-xl p-8 mb-20">
          <h2 className="text-3xl font-bold mb-4 text-blackFlexible Schedule Options text-black">
            Get Your Website Today
          </h2>
          <p className="text-gray-600 mb-6">
            Join other successful language teachers online
          </p>
          <Link
            href="/contact"
            className="bg-blue-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors"
          >
            Start Building
          </Link>
        </section>
      </main>
    </div>
  );
}

================
File: src/app/sample/advanced/page.js
================
import React from "react";
import { Nav } from "../page";

export default function AdvancedPage() {
  return (
    <div className="min-h-screen bg-gray-50">
      <Nav />
      <main className="pt-24 pb-20">
        <div className="container mx-auto px-4">
          {/* Course Header */}
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              Advanced Japanese (JLPT N2-N1)
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Master advanced Japanese with our comprehensive N2-N1 course.
              Achieve professional-level fluency and cultural understanding.
            </p>
          </div>

          {/* Course Details */}
          <div className="grid md:grid-cols-2 gap-8 mb-12">
            <div className="bg-white rounded-lg shadow-md p-8">
              <h2 className="text-2xl font-bold text-rose-600 mb-4">
                Course Overview
              </h2>
              <ul className="space-y-4 text-gray-600">
                <li className="flex items-start">
                  <span className="font-bold mr-2">Duration:</span>
                  <span>24 weeks (2 lessons per week)</span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Level:</span>
                  <span>N3 to professional N1 level</span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Goals:</span>
                  <span>
                    Professional fluency, advanced reading/writing, native-level
                    discussions
                  </span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Prerequisites:</span>
                  <span>JLPT N3 level or equivalent</span>
                </li>
              </ul>
            </div>

            <div className="bg-white rounded-lg shadow-md p-8">
              <h2 className="text-2xl font-bold text-rose-600 mb-4">
                What You&apos;ll Learn
              </h2>
              <ul className="space-y-3 text-gray-600">
                <li>• Advanced kanji (1500+ characters)</li>
                <li>• Complex linguistic concepts</li>
                <li>• Professional and academic Japanese</li>
                <li>• Advanced writing techniques</li>
                <li>• Literature and media comprehension</li>
                <li>• Cultural nuances and expressions</li>
                <li>• Business negotiation skills</li>
              </ul>
            </div>
          </div>

          {/* Schedule and Pricing */}
          <div className="bg-white rounded-lg shadow-md p-8 mb-12">
            <h2 className="text-2xl font-bold text-rose-600 mb-6">
              Schedule & Pricing
            </h2>
            <div className="grid md:grid-cols-2 gap-8 text-black">
              <div>
                <h3 className="text-xl font-bold mb-3">
                  Flexible Schedule Options
                </h3>
                <ul className="space-y-2 text-gray-600">
                  <li>• Individual scheduling available</li>
                  <li>• Professional course timing</li>
                  <li>• Intensive preparation options</li>
                  <li>• 90-minute lesson duration</li>
                </ul>
              </div>
              <div>
                <h3 className="text-xl font-bold mb-3">Course Packages</h3>
                <ul className="space-y-2 text-gray-600">
                  <li>• 24-week full course: ¥280,000</li>
                  <li>• 16-week intensive: ¥220,000</li>
                  <li>• Professional Japanese: ¥320,000</li>
                  <li>• Custom packages available</li>
                </ul>
              </div>
            </div>
          </div>

          {/* CTA */}
          <div className="text-center">
            <a
              href="/sample/contact"
              className="inline-block bg-rose-600 text-white px-8 py-3 rounded-md hover:bg-rose-700 transition-colors"
            >
              Achieve Professional Fluency
            </a>
          </div>
        </div>
      </main>
    </div>
  );
}

================
File: src/app/sample/beginner/page.js
================
import React from "react";
import {Nav} from "../page";

export default function BeginnerPage() {
  return (
    <div className="min-h-screen bg-gray-50 text-black">
        <Nav />
      <main className="pt-24 pb-20">
        <div className="container mx-auto px-4">
          {/* Course Header */}
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              Beginner Japanese (JLPT N5-N4)
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Start your Japanese learning journey with our comprehensive
              beginner course. Master the basics and build a strong foundation
              for further study.
            </p>
          </div>

          {/* Course Details */}
          <div className="grid md:grid-cols-2 gap-8 mb-12">
            <div className="bg-white rounded-lg shadow-md p-8">
              <h2 className="text-2xl font-bold text-rose-600 mb-4">
                Course Overview
              </h2>
              <ul className="space-y-4 text-gray-600">
                <li className="flex items-start">
                  <span className="font-bold mr-2">Duration:</span>
                  <span>12 weeks (2 lessons per week)</span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Level:</span>
                  <span>Complete beginner to basic conversation</span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Goals:</span>
                  <span>
                    Master basic communication, read and write
                    hiragana/katakana, learn essential kanji
                  </span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Assessment:</span>
                  <span>Regular progress checks and JLPT N5 preparation</span>
                </li>
              </ul>
            </div>

            <div className="bg-white rounded-lg shadow-md p-8">
              <h2 className="text-2xl font-bold text-rose-600 mb-4">
                What You&apos;ll Learn
              </h2>
              <ul className="space-y-3 text-gray-600">
                <li>• Complete hiragana and katakana writing systems</li>
                <li>• Basic kanji (100-300 essential characters)</li>
                <li>• Everyday conversations and greetings</li>
                <li>• Basic grammar patterns and sentence structure</li>
                <li>• Numbers, dates, and time expressions</li>
                <li>• Basic vocabulary for daily life</li>
                <li>• Introduction to Japanese culture</li>
              </ul>
            </div>
          </div>

          {/* Schedule and Pricing */}
          <div className="bg-white rounded-lg shadow-md p-8 mb-12">
            <h2 className="text-2xl font-bold text-rose-600 mb-6">
              Schedule & Pricing
            </h2>
            <div className="grid md:grid-cols-2 gap-8 text-black">
              <div>
                <h3 className="text-xl font-bold mb-3">
                  Flexible Schedule Options
                </h3>
                <ul className="space-y-2 text-gray-600">
                  <li>• Morning sessions: 8 AM - 12 PM (JST)</li>
                  <li>• Evening sessions: 6 PM - 10 PM (JST)</li>
                  <li>• Weekend intensive courses available</li>
                  <li>• 50-minute lesson duration</li>
                </ul>
              </div>
              <div>
                <h3 className="text-xl font-bold mb-3">Course Packages</h3>
                <ul className="space-y-2 text-gray-600">
                  <li>• 12-week full course: ¥120,000</li>
                  <li>• 8-week intensive: ¥90,000</li>
                  <li>• Pay-per-lesson: ¥6,000/lesson</li>
                  <li>• Materials included</li>
                </ul>
              </div>
            </div>
          </div>

          {/* CTA */}
          <div className="text-center">
            <a
              href="/sample/contact"
              className="inline-block bg-rose-600 text-white px-8 py-3 rounded-md hover:bg-rose-700 transition-colors"
            >
              Start Your Learning Journey
            </a>
          </div>
        </div>
      </main>
    </div>
  );
}

================
File: src/app/sample/contact/page.js
================
import React from "react";
import {Nav} from "../page";

export default function ContactPage() {
  return (
    <div className="min-h-screen bg-gray-50  text-black">
      <Nav />
      <main className="pt-24 pb-20">
        <div className="container mx-auto px-4">
          {/* Contact Header */}
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              Contact Us
              <span className="block text-2xl text-rose-600 mt-2">
                お問い合わせ
              </span>
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Get in touch to schedule your free trial lesson or ask any
              questions about our courses.
            </p>
          </div>

          {/* Contact Form */}
          <div className="max-w-2xl mx-auto">
            <div className="bg-white rounded-lg shadow-md p-8">
              <form className="space-y-6">
                <div className="grid md:grid-cols-2 gap-6">
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      First Name
                    </label>
                    <input
                      type="text"
                      className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-rose-500 focus:border-rose-500"
                    />
                  </div>
                  <div>
                    <label className="block text-sm font-medium text-gray-700 mb-1">
                      Last Name
                    </label>
                    <input
                      type="text"
                      className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-rose-500 focus:border-rose-500"
                    />
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Email
                  </label>
                  <input
                    type="email"
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-rose-500 focus:border-rose-500"
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Course Level Interest
                  </label>
                  <select className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-rose-500 focus:border-rose-500">
                    <option value="">Select a level</option>
                    <option value="beginner">Beginner (N5-N4)</option>
                    <option value="intermediate">Intermediate (N3)</option>
                    <option value="advanced">Advanced (N2-N1)</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Preferred Schedule
                  </label>
                  <select className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-rose-500 focus:border-rose-500">
                    <option value="">Select a time slot</option>
                    <option value="morning">Morning (8 AM - 12 PM JST)</option>
                    <option value="afternoon">
                      Afternoon (1 PM - 5 PM JST)
                    </option>
                    <option value="evening">Evening (6 PM - 10 PM JST)</option>
                  </select>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Message
                  </label>
                  <textarea
                    rows="4"
                    className="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-rose-500 focus:border-rose-500"
                    placeholder="Tell us about your Japanese learning goals..."
                  ></textarea>
                </div>

                <div>
                  <button
                    type="submit"
                    className="w-full bg-rose-600 text-white px-6 py-3 rounded-md hover:bg-rose-700 transition-colors"
                  >
                    Send Message
                  </button>
                </div>
              </form>
            </div>

            {/* Additional Contact Info */}
            <div className="mt-12 grid md:grid-cols-3 gap-8">
              <div className="text-center">
                <h3 className="text-lg font-bold text-gray-900 mb-2">Email</h3>
                <p className="text-gray-600">contact@senseiclass.com</p>
              </div>
              <div className="text-center">
                <h3 className="text-lg font-bold text-gray-900 mb-2">
                  Hours (JST)
                </h3>
                <p className="text-gray-600">Mon-Fri: 8:00 - 22:00</p>
                <p className="text-gray-600">Sat-Sun: 10:00 - 18:00</p>
              </div>
              <div className="text-center">
                <h3 className="text-lg font-bold text-gray-900 mb-2">
                  Location
                </h3>
                <p className="text-gray-600">Online Lessons via Zoom</p>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
}

================
File: src/app/sample/intermediate/page.js
================
import React from "react";
import { Nav } from "../page";

export default function IntermediatePage() {
  return (
    <div className="min-h-screen bg-gray-50">
      <Nav />
      <main className="pt-24 pb-20">
        <div className="container mx-auto px-4">
          {/* Course Header */}
          <div className="text-center mb-12">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              Intermediate Japanese (JLPT N3)
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Take your Japanese to the next level with our intermediate course.
              Develop natural conversation skills and master complex grammar
              patterns.
            </p>
          </div>

          {/* Course Details */}
          <div className="grid md:grid-cols-2 gap-8 mb-12">
            <div className="bg-white rounded-lg shadow-md p-8">
              <h2 className="text-2xl font-bold text-rose-600 mb-4">
                Course Overview
              </h2>
              <ul className="space-y-4 text-gray-600">
                <li className="flex items-start">
                  <span className="font-bold mr-2">Duration:</span>
                  <span>16 weeks (2 lessons per week)</span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Level:</span>
                  <span>N4 to confident N3 level</span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Goals:</span>
                  <span>
                    Natural conversation, business Japanese basics, intermediate
                    kanji mastery
                  </span>
                </li>
                <li className="flex items-start">
                  <span className="font-bold mr-2">Prerequisites:</span>
                  <span>JLPT N4 level or equivalent</span>
                </li>
              </ul>
            </div>

            <div className="bg-white rounded-lg shadow-md p-8">
              <h2 className="text-2xl font-bold text-rose-600 mb-4">
                What You&apos;ll Learn
              </h2>
              <ul className="space-y-3 text-gray-600">
                <li>• Complex grammar patterns and expressions</li>
                <li>• Intermediate kanji (500-800 characters)</li>
                <li>• Business Japanese fundamentals</li>
                <li>• Natural conversation techniques</li>
                <li>• Reading comprehension strategies</li>
                <li>• Formal and casual speech styles</li>
                <li>• Japanese culture and business etiquette</li>
              </ul>
            </div>
          </div>

          {/* Schedule and Pricing */}
          <div className="bg-white rounded-lg shadow-md p-8 mb-12">
            <h2 className="text-2xl font-bold text-rose-600 mb-6">
              Schedule & Pricing
            </h2>
            <div className="grid md:grid-cols-2 gap-8 text-black">
              <div>
                <h3 className="text-xl font-bold mb-3">
                  Flexible Schedule Options
                </h3>
                <ul className="space-y-2 text-gray-600">
                  <li>• Morning sessions: 8 AM - 12 PM (JST)</li>
                  <li>• Evening sessions: 6 PM - 10 PM (JST)</li>
                  <li>• Business course options available</li>
                  <li>• 60-minute lesson duration</li>
                </ul>
              </div>
              <div>
                <h3 className="text-xl font-bold mb-3">Course Packages</h3>
                <ul className="space-y-2 text-gray-600">
                  <li>• 16-week full course: ¥180,000</li>
                  <li>• 12-week intensive: ¥150,000</li>
                  <li>• Business Japanese add-on: ¥50,000</li>
                  <li>• Materials included</li>
                </ul>
              </div>
            </div>
          </div>

          {/* CTA */}
          <div className="text-center">
            <a
              href="/sample/contact"
              className="inline-block bg-rose-600 text-white px-8 py-3 rounded-md hover:bg-rose-700 transition-colors"
            >
              Elevate Your Japanese
            </a>
          </div>
        </div>
      </main>
    </div>
  );
}

================
File: src/app/sample/page.js
================
"use client";
import React, { useState } from "react";
import {
  Book,
  MessageCircle,
  Calendar,
  Star,
  Globe,
  Users,
  ChevronDown,
  Menu,
  X,
} from "lucide-react";

export function Nav() {
  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);

  return (
    <header className="bg-white shadow-sm border-t border-gray-300">
      <div className="container mx-auto px-4 py-4">
        <div className="flex items-center justify-between">
          {/* Logo */}
          <h1 className="text-xl font-bold text-rose-600">
            先生の日本語教室
            <span className="block text-sm text-gray-600">
              Sensei&apos;s Japanese Class
            </span>
          </h1>

          {/* Mobile menu button */}
          <button
            className="lg:hidden text-gray-600 hover:text-gray-800"
            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}
          >
            {isMobileMenuOpen ? (
              <X className="h-6 w-6" />
            ) : (
              <Menu className="h-6 w-6" />
            )}
          </button>

          {/* Desktop Navigation */}
          <nav className="hidden lg:block">
            <ul className="flex items-center space-x-6">
              <li>
                <a href="/sample" className="text-gray-600 hover:text-gray-800">
                  Home
                </a>
              </li>
              <li className="relative">
                <button
                  className="flex items-center text-gray-600 hover:text-gray-800"
                  onClick={() => setIsSubmenuOpen(!isSubmenuOpen)}
                >
                  Courses
                  <ChevronDown className="ml-1 h-4 w-4" />
                </button>
                {isSubmenuOpen && (
                  <ul className="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg py-1 z-50">
                    <li>
                      <a
                        href="/sample/beginner"
                        className="block px-4 py-2 text-gray-700 hover:bg-gray-100"
                      >
                        Beginner JLPT N5-N4
                      </a>
                    </li>
                    <li>
                      <a
                        href="/sample/intermediate"
                        className="block px-4 py-2 text-gray-700 hover:bg-gray-100"
                      >
                        Intermediate JLPT N3
                      </a>
                    </li>
                    <li>
                      <a
                        href="/sample/advanced"
                        className="block px-4 py-2 text-gray-700 hover:bg-gray-100"
                      >
                        Advanced JLPT N2-N1
                      </a>
                    </li>
                  </ul>
                )}
              </li>
              <li>
                <a
                  href="/sample/contact"
                  className="inline-block bg-rose-600 text-white px-4 py-2 rounded-md hover:bg-rose-700"
                >
                  Book Trial Lesson
                </a>
              </li>
            </ul>
          </nav>
        </div>

        {/* Mobile Navigation */}
        {isMobileMenuOpen && (
          <nav className="lg:hidden mt-4">
            <ul className="flex flex-col space-y-4">
              <li>
                <a
                  href="/sample"
                  className="block text-gray-600 hover:text-gray-800"
                >
                  Home
                </a>
              </li>
              <li>
                <button
                  className="flex items-center text-gray-600 hover:text-gray-800 w-full"
                  onClick={() => setIsSubmenuOpen(!isSubmenuOpen)}
                >
                  Courses
                  <ChevronDown
                    className={`ml-1 h-4 w-4 transform transition-transform duration-200 ${
                      isSubmenuOpen ? "rotate-180" : ""
                    }`}
                  />
                </button>
                {isSubmenuOpen && (
                  <ul className="mt-2 ml-4 space-y-2">
                    <li>
                      <a
                        href="/sample/beginner"
                        className="block text-gray-700 hover:text-gray-900"
                      >
                        Beginner JLPT N5-N4
                      </a>
                    </li>
                    <li>
                      <a
                        href="/sample/intermediate"
                        className="block text-gray-700 hover:text-gray-900"
                      >
                        Intermediate JLPT N3
                      </a>
                    </li>
                    <li>
                      <a
                        href="/sample/advanced"
                        className="block text-gray-700 hover:text-gray-900"
                      >
                        Advanced JLPT N2-N1
                      </a>
                    </li>
                  </ul>
                )}
              </li>
              <li>
                <a
                  href="/sample/contact"
                  className="inline-block bg-rose-600 text-white px-4 py-2 rounded-md hover:bg-rose-700"
                >
                  Book Trial Lesson
                </a>
              </li>
            </ul>
          </nav>
        )}
      </div>
    </header>
  );
}

export default function JapaneseTeacherDemo() {
  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <Nav />
      {/* Banner */}
      <section className="bg-gradient-to-r from-rose-500 to-pink-500 text-white py-20 text-center">
        <div className="container mx-auto px-4">
          <h2 className="text-4xl font-bold mb-4">
            日本語を学びましょう！
            <span className="block text-2xl mt-2">
              Let&apos;s Learn Japanese!
            </span>
          </h2>
          <p className="text-xl mb-8">
            Experience personalized Japanese lessons with a certified native
            teacher
          </p>
          <div className="flex justify-center space-x-4">
            <a
              href="/sample/contact"
              className="bg-white text-rose-600 px-6 py-3 rounded-md hover:bg-gray-100"
            >
              Free Trial Lesson
            </a>
            <a
              href="/sample/courses"
              className="border-2 border-white text-white px-6 py-3 rounded-md hover:bg-white hover:text-rose-600"
            >
              View Courses
            </a>
          </div>
        </div>
      </section>

      {/* Main Content */}
      <section className="py-20">
        <div className="container mx-auto px-4 text-black">
          {/* Features Grid */}
          <div className="grid md:grid-cols-3 gap-8 mb-20">
            <div className="text-center p-6 bg-white rounded-lg shadow-md">
              <Book className="mx-auto h-12 w-12 text-rose-600 mb-4" />
              <h3 className="text-xl font-bold mb-2">Structured Curriculum</h3>
              <p className="text-gray-600">
                Comprehensive JLPT-aligned lessons from N5 to N1 levels. Learn
                reading, writing, speaking, and listening with native materials.
              </p>
            </div>
            <div className="text-center p-6 bg-white rounded-lg shadow-md">
              <MessageCircle className="mx-auto h-12 w-12 text-rose-600 mb-4" />
              <h3 className="text-xl font-bold mb-2">Interactive Learning</h3>
              <p className="text-gray-600">
                Practice conversation with a native speaker. Regular speaking
                exercises and real-world scenarios to build confidence.
              </p>
            </div>
            <div className="text-center p-6 bg-white rounded-lg shadow-md">
              <Calendar className="mx-auto h-12 w-12 text-rose-600 mb-4" />
              <h3 className="text-xl font-bold mb-2">Flexible Schedule</h3>
              <p className="text-gray-600">
                Book lessons at your convenience. Morning and evening slots
                available to accommodate different time zones.
              </p>
            </div>
          </div>

          {/* Course Levels */}
          <div className="mb-20">
            <h2 className="text-3xl font-bold text-center mb-12">
              Course Levels
            </h2>
            <div className="grid md:grid-cols-3 gap-8">
              <div className="bg-white rounded-lg shadow-md overflow-hidden">
                <div className="p-6">
                  <Star className="h-8 w-8 text-rose-600 mb-4" />
                  <h3 className="text-xl font-bold mb-2">Beginner (N5-N4)</h3>
                  <ul className="space-y-2 text-gray-600 mb-4">
                    <li>• Basic greetings and conversations</li>
                    <li>• Hiragana and Katakana mastery</li>
                    <li>• Essential kanji (100-300 characters)</li>
                    <li>• Basic grammar patterns</li>
                  </ul>
                  <a
                    href="/sample/beginner"
                    className="inline-block border-2 border-rose-600 text-rose-600 px-4 py-2 rounded-md hover:bg-rose-600 hover:text-white"
                  >
                    Learn More
                  </a>
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-md overflow-hidden">
                <div className="p-6">
                  <Globe className="h-8 w-8 text-rose-600 mb-4" />
                  <h3 className="text-xl font-bold mb-2">Intermediate (N3)</h3>
                  <ul className="space-y-2 text-gray-600 mb-4">
                    <li>• Complex conversation skills</li>
                    <li>• Business Japanese basics</li>
                    <li>• Intermediate kanji (500-800 characters)</li>
                    <li>• Advanced grammar patterns</li>
                  </ul>
                  <a
                    href="/sample/intermediate"
                    className="inline-block border-2 border-rose-600 text-rose-600 px-4 py-2 rounded-md hover:bg-rose-600 hover:text-white"
                  >
                    Learn More
                  </a>
                </div>
              </div>
              <div className="bg-white rounded-lg shadow-md overflow-hidden">
                <div className="p-6">
                  <Users className="h-8 w-8 text-rose-600 mb-4" />
                  <h3 className="text-xl font-bold mb-2">Advanced (N2-N1)</h3>
                  <ul className="space-y-2 text-gray-600 mb-4">
                    <li>• Native-level discussions</li>
                    <li>• Professional Japanese</li>
                    <li>• Advanced kanji (1500+ characters)</li>
                    <li>• Cultural context and nuances</li>
                  </ul>
                  <a
                    href="/sample/advanced"
                    className="inline-block border-2 border-rose-600 text-rose-600 px-4 py-2 rounded-md hover:bg-rose-600 hover:text-white"
                  >
                    Learn More
                  </a>
                </div>
              </div>
            </div>
          </div>

          {/* CTA Section */}
          <div className="bg-gray-900 text-white rounded-lg p-12 text-center">
            <h2 className="text-3xl font-bold mb-4">
              Start Your Japanese Journey Today
            </h2>
            <p className="text-gray-300 mb-8">
              Book a free 30-minute trial lesson and experience personalized
              Japanese learning
            </p>
            <form className="max-w-md mx-auto">
              <div className="flex flex-col sm:flex-row gap-4">
                <input
                  type="email"
                  placeholder="Enter your email"
                  className="flex-1 px-4 py-2 rounded-md text-gray-900"
                />
                <button
                  type="submit"
                  className="bg-rose-600 text-white px-6 py-2 rounded-md hover:bg-rose-700"
                >
                  Book Trial
                </button>
              </div>
            </form>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-800 text-white py-8">
        <div className="container mx-auto px-4 text-center">
          <p className="text-gray-400">
            © 2025 Sensei&apos;s Japanese Class. All rights reserved.
          </p>
        </div>
      </footer>
    </div>
  );
}

================
File: src/app/services/page.js
================
import React from "react";
import {
  Globe,
  Code,
  Bot,
  Video,
  Image as ImageIcon,
  Calendar,
  Linkedin,
  Smartphone,
} from "lucide-react";

export default function ServicesPage() {
  const services = [
    {
      title: "Custom Website Development",
      description:
        "Get a professional teaching website that converts visitors into students. Includes SEO optimization and mobile-friendly design.",
      icon: Globe,
    },
    {
      title: "Booking System Integration",
      description:
        "Seamless integration with popular scheduling tools like Calendly, Google Calendar, or custom booking solutions.",
      icon: Calendar,
    },
    {
      title: "AI Content Creation Suite",
      description:
        "Learn to leverage AI tools for creating engaging educational content, social media posts, and teaching materials.",
      icon: Bot,
    },
    {
      title: "Social Media Integration",
      description:
        "Easily showcase all your social media profiles, including LINE, Instagram, LinkedIn, and more, directly on your website. Help students connect with you, stay updated on your content, and grow your teaching brand effortlessly.",
      icon: Linkedin,
    },
    {
      title: "Custom Teaching Apps",
      description:
        "Specialized applications for managing students, lessons, and educational content all in one place.",
      icon: Smartphone,
    },
    {
      title: "Content Production Training",
      description:
        "Learn to create professional videos, images, and educational materials using modern AI tools.",
      icon: Video,
    },
  ];

  const features = [
    {
      title: "Technical Expertise with Teaching Focus",
      description:
        "We understand both technology and education, creating solutions that work for teachers",
    },
    {
      title: "Future-Proof Solutions",
      description:
        "Stay ahead with AI integration and modern tech while keeping things simple to use",
    },
    {
      title: "Complete Digital Presence",
      description:
        "From websites to social media to content creation - everything you need to succeed online",
    },
    {
      title: "Ongoing Support",
      description:
        "Get help when you need it and learn to manage your digital presence confidently",
    },
  ];

  return (
    <div className="grid grid-rows-[auto_1fr_auto] min-h-screen text-black">
      {/* Hero Section */}
      <header className="w-full py-16 bg-gradient-to-r from-indigo-500 to-blue-600">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center text-white">
          <h1 className="text-4xl sm:text-5xl font-bold mb-6">
            Digital Solutions for Modern Teachers
          </h1>
          <p className="text-xl sm:text-2xl mb-8">
            Build your professional online presence with custom websites, apps,
            and AI-powered content creation tools
          </p>
          {/* <div className="flex gap-4 justify-center">
            <a
              href="/contact"
              className="bg-white text-blue-600 px-6 py-2 rounded-full font-semibold hover:bg-gray-100 transition-colors"
            >
              Start Your Project
            </a>
            <a
              href="/sample"
              className="border-2 border-white text-white px-6 py-2 rounded-full font-semibold hover:bg-white/10 transition-colors"
            >
              Seea Template
            </a>
          </div> */}
        </div>
      </header>

      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        {/* Services Section */}
        <section className="mb-20">
          <h2 className="text-3xl font-bold mb-8 text-center text-white">
            Complete Digital Solutions for Teachers
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {services.map((service, index) => (
              <div key={index} className="p-6 rounded-lg bg-white shadow-lg">
                <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mb-4">
                  {React.createElement(service.icon, {
                    className: "w-6 h-6 text-blue-600",
                  })}
                </div>
                <h3 className="text-xl font-semibold mb-4">{service.title}</h3>
                <p className="text-gray-600">{service.description}</p>
              </div>
            ))}
          </div>
        </section>

        {/* Features Section */}
        <section className="mb-20">
          <h2 className="text-3xl font-bold mb-8 text-center text-black">
            Why Teachers Choose Our Solutions
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
            {features.map((feature, index) => (
              <div key={index} className="flex items-start gap-4">
                <div className="w-8 h-8 rounded-full bg-blue-100 flex items-center justify-center flex-shrink-0">
                  <span className="text-blue-600">✓</span>
                </div>
                <div>
                  <h3 className="font-semibold mb-2 text-black">
                    {feature.title}
                  </h3>
                  <p className="text-gray-600">{feature.description}</p>
                </div>
              </div>
            ))}
          </div>
        </section>

        {/* Contact Section */}
        <section className="mb-20">
          <h2 className="text-3xl font-bold mb-8 text-center text-black">
            Get Your Professional Online Presence
          </h2>
          <div className="max-w-2xl mx-auto p-8 rounded-lg bg-white shadow-lg">
            <p className="text-lg text-center mb-6">
              We create custom digital solutions tailored to your teaching style
              and goals. Contact us to discuss your requirements and get a
              personalized quote.
            </p>
            <div className="flex flex-col items-center gap-6">
              <div className="text-center">
                <h3 className="font-semibold mb-2">
                  Available Options Include:
                </h3>
                <ul className="space-y-2">
                  <li className="flex items-center justify-center gap-2">
                    <span className="text-blue-600">✓</span>
                    <span>Custom domain or free minnastudy.com subdomain</span>
                  </li>
                  <li className="flex items-center justify-center gap-2">
                    <span className="text-blue-600">✓</span>
                    <span>Integrated booking and payment systems</span>
                  </li>
                  <li className="flex items-center justify-center gap-2">
                    <span className="text-blue-600">✓</span>
                    <span>AI content creation tools and training</span>
                  </li>
                </ul>
              </div>
              <button className="bg-blue-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors">
                Get Started Today
              </button>
            </div>
          </div>
        </section>

        {/* CTA Section */}
        <section className="text-center bg-gray-50 rounded-xl p-8">
          <h2 className="text-3xl font-bold mb-4">
            Ready to Grow Your Teaching Business?
          </h2>
          <p className="text-gray-600 mb-6">
            Join other successful teachers with a professional online presence
          </p>
          <a
            href="/contact"
            className="bg-blue-600 text-white px-8 py-3 rounded-full font-semibold hover:bg-blue-700 transition-colors inline-block"
          >
            Start Building
          </a>
        </section>
      </main>
    </div>
  );
}

================
File: src/components/ui/nav.js
================
"use client";
import Link from "next/link";
import { useState } from "react";

export default function Navigation() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const navItems = [
    { href: "/", label: "Home" },
    { href: "/services", label: "Services" },
    // { href: "/games", label: "Games" },
    // { href: "/tools", label: "Tools" },
    // { href: "/community", label: "Community" },
  ];

  return (
    <nav className="bg-white shadow-sm">
      <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between h-16">
          <div className="flex items-center">
            <Link href="/" className="flex-shrink-0 flex items-center">
              <span className="text-xl font-bold text-primary-600">
                MinnaStudy
              </span>
            </Link>
          </div>

          {/* Desktop navigation */}
          <div className="hidden sm:ml-6 sm:flex sm:items-center">
            {navItems.map((item) => (
              <Link
                key={item.href}
                href={item.href}
                className="px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50"
              >
                {item.label}
              </Link>
            ))}
            {/* <Link
              href="/login"
              className="ml-4 px-4 py-2 rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700"
            >
              Login
            </Link> */}
          </div>

          {/* Mobile menu button */}
          <div className="flex items-center sm:hidden">
            <button
              type="button"
              className="inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-primary-600 hover:bg-gray-50"
              onClick={() => setIsMenuOpen(!isMenuOpen)}
            >
              <span className="sr-only">Open main menu</span>
              {/* Hamburger icon */}
              <svg
                className="block h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M4 6h16M4 12h16M4 18h16"
                />
              </svg>
            </button>
          </div>
        </div>
      </div>

      {/* Mobile menu */}
      {isMenuOpen && (
        <div className="sm:hidden">
          <div className="pt-2 pb-3 space-y-1">
            {navItems.map((item) => (
              <Link
                key={item.href}
                href={item.href}
                className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-primary-600 hover:bg-gray-50"
                onClick={() => setIsMenuOpen(false)}
              >
                {item.label}
              </Link>
            ))}
            {/* <Link
              href="/login"
              className="block px-3 py-2 rounded-md text-base font-medium text-white bg-primary-600 hover:bg-primary-700 mt-2"
              onClick={() => setIsMenuOpen(false)}
            >
              Login
            </Link> */}
          </div>
        </div>
      )}
    </nav>
  );
}

================
File: tailwind.config.mjs
================
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        primary: {
          50: "#eff6ff",  // Lightest blue
          100: "#dbeafe",
          200: "#bfdbfe",
          300: "#93c5fd",
          400: "#60a5fa",
          500: "#3b82f6",  // Main blue
          600: "#2563eb",
          700: "#1d4ed8",
          800: "#1e40af",
          900: "#1e3a8a",  // Darkest blue
        },        
        secondary: {
          // Add your secondary color palette
        },
      },
      fontFamily: {
        sans: ["var(--font-geist-sans)", "system-ui", "sans-serif"],
        mono: ["var(--font-geist-mono)", "monospace"],
      },
    },
  },
  plugins: [],
};
